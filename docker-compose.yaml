version: '3.5'

services:

  backend:
    build:
      context: ./quarkus/fta
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: backend
    hostname: backend
    ports:
      - "8080:8080"
    environment:
      - QUARKUS_NEO4J_URI=bolt://localhost:7687
      - QUARKUS_NEO4J_AUTHENTICATION_USERNAME=neo4j
      - QUARKUS_NEO4J_AUTHENTICATION_PASSWORD=trullodio

  neo4j:
    image: neo4j
    hostname: neo4j
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - "NEO4J_ACCEPT_LICENSE_AGREEMENT=yes"
      - "NEO4J_AUTH=neo4j/trullodio"
      - NEO4J_dbms_security_procedures_unrestricted=apoc.\\\*
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_server_memory_heap_max__size=4G
      - NEO4J_server_memory_heap_initial__size=4G
      - NEO4J_server_memory_pagecache_size=4G
    volumes:
      - ./neo4j/plugins:/var/lib/neo4j/plugins
      - ./neo4j/data:/data
      - ./init/datasets/output:/var/lib/neo4j/import

  mongo:
    image: mongo:5.0
    container_name: mongo
    depends_on:
      - neo4j
    hostname: mongo
    volumes:
      - ./mongo:/data/db
    ports:
      - "27018:27017"

  init:
    build: 
      context: .
      dockerfile: Dockerfile.init
    container_name: init
    depends_on:
      - mongo
    ports:
      - "5000:5000"
    volumes:
      - ./init/datasets:/app/datasets
      - ./init/main.py:/app/main.py
      - ./init/init.py:/app/init.py
      - ./init/utils.py:/app/utils.py
      - ./init/.env:/app/.env

  mongo-express:
    image: mongo-express 
    container_name: mongo-express
    hostname: mongo-express
    depends_on:
      - mongo
    ports:
      - "8081:8081"

  

